<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Age" xml:space="preserve">
    <value>Возраст</value>
  </data>
  <data name="AgeIsOutOfLimits" xml:space="preserve">
    <value>Возраст игрока должен быть между {0} и {1} годами</value>
  </data>
  <data name="AnnouncementOfWinner" xml:space="preserve">
    <value>Игрок №{0} ({1}) победил</value>
    <comment>1</comment>
  </data>
  <data name="AskForCommand" xml:space="preserve">
    <value>Введите команду: </value>
  </data>
  <data name="AskForNewGame" xml:space="preserve">
    <value>Хотите начать новую игру в Крестики-Нолики?{0}Нажмите Ввод чтобы начать или любую другую клавишу чтобы выйти</value>
    <comment>1</comment>
  </data>
  <data name="AskForPlayerInfo" xml:space="preserve">
    <value>Игрок #{0} загляните в таблицу зарегистрированных игроков и введите свое ID Имя Возраст, если вы зарегистрированы, или Введите свое Имя Возраст для регистрации</value>
    <comment>1</comment>
  </data>
  <data name="AskForPlayerTurn" xml:space="preserve">
    <value>Игрок #{0} ({1}) введите два числа в диапазоне [1-{2}] и разделите их пробелом</value>
    <comment>1</comment>
  </data>
  <data name="CommandExecuted" xml:space="preserve">
    <value>Команда была выполнена и был создан файл с названием {0}. Его путь {1}.</value>
  </data>
  <data name="CordinatesOutOfRange" xml:space="preserve">
    <value>Координаты вне границ поля, должны быть два числа от 1 до {0}</value>
  </data>
  <data name="DbSavingException" xml:space="preserve">
    <value>Что-то пошло не так во время сохранения данных в базе данных : {0}</value>
  </data>
  <data name="Draw" xml:space="preserve">
    <value>НИЧЬЯ</value>
    <comment>1</comment>
  </data>
  <data name="EmptyPlayerDbSet" xml:space="preserve">
    <value>Сейчас в базе данных ещё нет игроков, зарегистрируйтесь чтобы играть</value>
  </data>
  <data name="EmptyPlayerName" xml:space="preserve">
    <value>Имя игрока не может быть пустым или содержать только пробелы</value>
  </data>
  <data name="GenerateAllResultsDescription" xml:space="preserve">
    <value>Сформируется файл-отчет в формате json, который отобразит результаты ВСЕХ игр с информацией об игроках</value>
  </data>
  <data name="GenerateLastGameResultDescription" xml:space="preserve">
    <value>Сформирмируется файл-отчет в формате json, который отобразит результат последней игры</value>
  </data>
  <data name="GenerateResultsForCurrentPlayersDescription" xml:space="preserve">
    <value>Сформирмируется файл-отчет в формате json, который отобразит результаты всех игр для игроков, указанных в текущей сессии</value>
  </data>
  <data name="HelpDescription" xml:space="preserve">
    <value>Показывает на экране все доступные команды и их описания</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IdIsOccupied" xml:space="preserve">
    <value>Id = {0} уже занят другим игроком</value>
  </data>
  <data name="InvalidPlayerInfo" xml:space="preserve">
    <value>Неверная информация от игрока:</value>
  </data>
  <data name="KeyIsForValue" xml:space="preserve">
    <value>{0} для {1}</value>
  </data>
  <data name="LesserAge" xml:space="preserve">
    <value>Ваш возраст не может быть меньше чем раньше</value>
  </data>
  <data name="Localizations" xml:space="preserve">
    <value>Английская,Немецкая,Русская</value>
  </data>
  <data name="MarkedSpot" xml:space="preserve">
    <value>Эта клетка уже занята, попробуйте другую</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="NecessaryKey" xml:space="preserve">
    <value>Нажмите необходимую клавишу чтобы выбрать язык</value>
  </data>
  <data name="NullAbbreviation" xml:space="preserve">
    <value>Клавиша не может быть null</value>
  </data>
  <data name="NullCommand" xml:space="preserve">
    <value>Команда не может быть null</value>
  </data>
  <data name="NullPlayerInfo" xml:space="preserve">
    <value>Информация об игроке не может быть null</value>
  </data>
  <data name="NullPlayerName" xml:space="preserve">
    <value>Имя игрока не может быть null</value>
  </data>
  <data name="NullPlayerTurnInfo" xml:space="preserve">
    <value>Информация об ходе не может быть null</value>
  </data>
  <data name="PlayerNameLengthIsOutOfLimits" xml:space="preserve">
    <value>Длинна имени игрока должна быть от {0} до {1} символов</value>
  </data>
  <data name="PlayersTableAgeColumnWidth" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="PressKey" xml:space="preserve">
    <value>Нажмите необходимую клафишу с цифрой , не букву</value>
  </data>
  <data name="SimilarPlayerException" xml:space="preserve">
    <value>Данный игрок уже в игре</value>
  </data>
  <data name="SkipDescription" xml:space="preserve">
    <value>Если вы больше не хотите вводить команды</value>
  </data>
  <data name="SkippedTurn" xml:space="preserve">
    <value>Вы сделали {0} ошибок подряд, ваш ход будет пропущен</value>
    <comment>1</comment>
  </data>
  <data name="SuccessfullRegistation" xml:space="preserve">
    <value>Регистрация прошла успешно, {0} ваш Id = {1} запомните его!</value>
    <comment>1</comment>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>В списке команд нет ни одной с именем {0}. вы можете использовать команду /help чтобы увидеть все доступные команды</value>
  </data>
  <data name="UnknownKey" xml:space="preserve">
    <value>Нет доступной локализации с таким индексом  ({0})</value>
  </data>
  <data name="UnknownPlayer" xml:space="preserve">
    <value>Среди зарегистрированных игроков не было найдено похожего,проверьте правильность введения данных или зарестрируйтесь введя ваши Имя Возраст</value>
  </data>
  <data name="WrongFormatOfPlayerInfo" xml:space="preserve">
    <value> Неверный формат информации об игроке, должно быть Id Имя Возраст если вы уже зарегистрированы, или Имя Возраст если вы не зарегистрированы</value>
  </data>
  <data name="WrongFormatOfTurnInfo" xml:space="preserve">
    <value>Неверный формат информации о ходе, должно быть два числа от 1 до {0}</value>
  </data>
</root>