//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicTacToeVNovikov.Resources.ru {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TicTacToeVNovikov.Resources.ru.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возраст игрока должен быть между {0} и {1} годами.
        /// </summary>
        internal static string AgeIsOutOfLimits {
            get {
                return ResourceManager.GetString("AgeIsOutOfLimits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игрок№{0} ({1}) победил.
        /// </summary>
        internal static string AnnouncementOfWinner {
            get {
                return ResourceManager.GetString("AnnouncementOfWinner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Введите команду: .
        /// </summary>
        internal static string AskForCommand {
            get {
                return ResourceManager.GetString("AskForCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Хотите начать новую игру в Крестики-Нолики? Нажмите Ввод чтобы начать или любую другую клавишу чтобы выйти.
        /// </summary>
        internal static string AskForNewGame {
            get {
                return ResourceManager.GetString("AskForNewGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игрок №{0} введите свои ID Имя Возраст если вы уже играли раньше или Имя Возраст если вы новый игрок.
        /// </summary>
        internal static string AskForPlayerInfo {
            get {
                return ResourceManager.GetString("AskForPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игрок№{0} ({1}) введите два числа в диапозоне [1-{2}]:.
        /// </summary>
        internal static string AskForPlayerTurn {
            get {
                return ResourceManager.GetString("AskForPlayerTurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Координаты вне границ поля, должны быть два числа от 1 до {0}.
        /// </summary>
        internal static string CordinatesOutOfRange {
            get {
                return ResourceManager.GetString("CordinatesOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на НИЧЬЯ.
        /// </summary>
        internal static string Draw {
            get {
                return ResourceManager.GetString("Draw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя игрока не может быть пустым или содержать только пробелы.
        /// </summary>
        internal static string EmptyPlayerName {
            get {
                return ResourceManager.GetString("EmptyPlayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сформируется файл-отчет в формате json, который отобразит результаты ВСЕХ игр с информацией об игроках.
        /// </summary>
        internal static string GenerateAllResultsDescription {
            get {
                return ResourceManager.GetString("GenerateAllResultsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сформирмируется файл-отчет в формате json, который отобразит результат последней игры.
        /// </summary>
        internal static string GenerateLastGameResultDescription {
            get {
                return ResourceManager.GetString("GenerateLastGameResultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сформирмируется файл-отчет в формате json, который отобразит результаты всех игр для игроков, указанных в текущей сессии.
        /// </summary>
        internal static string GenerateResultsForCurrentPlayersDescription {
            get {
                return ResourceManager.GetString("GenerateResultsForCurrentPlayersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Показывает на экране все доступные команды и их описания.
        /// </summary>
        internal static string HelpDescription {
            get {
                return ResourceManager.GetString("HelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Id = {0} уже занят другим игроком.
        /// </summary>
        internal static string IdIsOccupied {
            get {
                return ResourceManager.GetString("IdIsOccupied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверная информация от игрока:.
        /// </summary>
        internal static string InvalidPlayerInfo {
            get {
                return ResourceManager.GetString("InvalidPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ваш возраст не может быть меньше чем раньше.
        /// </summary>
        internal static string LesserAge {
            get {
                return ResourceManager.GetString("LesserAge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Эта клетка уже занята, попробуйте другую.
        /// </summary>
        internal static string MarkedSpot {
            get {
                return ResourceManager.GetString("MarkedSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Информация об игроке не может быть null.
        /// </summary>
        internal static string NullPlayerInfo {
            get {
                return ResourceManager.GetString("NullPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя игрока не может быть null.
        /// </summary>
        internal static string NullPlayerName {
            get {
                return ResourceManager.GetString("NullPlayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Информация об ходе не может быть null.
        /// </summary>
        internal static string NullPlayerTurnInfo {
            get {
                return ResourceManager.GetString("NullPlayerTurnInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Длинна имени игрока должна быть от {0} до {1} символов.
        /// </summary>
        internal static string PlayerNameLengthIsOutOfLimits {
            get {
                return ResourceManager.GetString("PlayerNameLengthIsOutOfLimits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы сделали {0} ошибок подряд, ваш ход будет пропущен.
        /// </summary>
        internal static string SkippedTurn {
            get {
                return ResourceManager.GetString("SkippedTurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Регистрация прошла успешно, {0} ваш Id = {1} запомните его!.
        /// </summary>
        internal static string SuccessfullRegistation {
            get {
                return ResourceManager.GetString("SuccessfullRegistation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В списке команд нет ни одной с именем {0}. вы можете использовать команду /help чтобы увидеть все доступные команды.
        /// </summary>
        internal static string UnknownCommand {
            get {
                return ResourceManager.GetString("UnknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  Неверный формат информации об игроке, должно быть Id Имя Возраст если вы уже зарегистрированы, или Имя Возраст если вы не зарегистрированы.
        /// </summary>
        internal static string WrongFormatOfPlayerInfo {
            get {
                return ResourceManager.GetString("WrongFormatOfPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Неверный формат информации о ходе, должно быть два числа от 1 до{0}.
        /// </summary>
        internal static string WrongFormatOfTurnInfo {
            get {
                return ResourceManager.GetString("WrongFormatOfTurnInfo", resourceCulture);
            }
        }
    }
}
