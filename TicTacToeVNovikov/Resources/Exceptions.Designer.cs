//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicTacToeVNovikov.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TicTacToeVNovikov.Resources.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player Age must be beetwen {0} and {1} ages.
        /// </summary>
        internal static string AgeIsOutOfLimits {
            get {
                return ResourceManager.GetString("AgeIsOutOfLimits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cordinates out of range of gamefield, must be two numbers from 1 to {0}.
        /// </summary>
        internal static string CordinatesOutOfRange {
            get {
                return ResourceManager.GetString("CordinatesOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player name can&apos;t be empty or contain only whitespaces.
        /// </summary>
        internal static string EmptyPlayerName {
            get {
                return ResourceManager.GetString("EmptyPlayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Id = {0} is alredy occupied by another Player.
        /// </summary>
        internal static string IdIsOccupied {
            get {
                return ResourceManager.GetString("IdIsOccupied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid player info:.
        /// </summary>
        internal static string InvalidPlayerInfo {
            get {
                return ResourceManager.GetString("InvalidPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;Your age can&apos;t be lesser than before&quot;.
        /// </summary>
        internal static string LesserAge {
            get {
                return ResourceManager.GetString("LesserAge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This spot is alredy marked, try another.
        /// </summary>
        internal static string MarkedSpot {
            get {
                return ResourceManager.GetString("MarkedSpot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information about turn can&apos;t be null.
        /// </summary>
        internal static string NullPlayerInfo {
            get {
                return ResourceManager.GetString("NullPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player name can&apos;t be null.
        /// </summary>
        internal static string NullPlayerName {
            get {
                return ResourceManager.GetString("NullPlayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Player name length must be beetwen {0} and {1} characters.
        /// </summary>
        internal static string PlayerNameLengthIsOutOfLimits {
            get {
                return ResourceManager.GetString("PlayerNameLengthIsOutOfLimits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information about Player can&apos;t be null.
        /// </summary>
        internal static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong format of Info, must be Id Name Age if you are registered or Name Age if you aren&apos;t.
        /// </summary>
        internal static string WrongFormatOfPlayerInfo {
            get {
                return ResourceManager.GetString("WrongFormatOfPlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong format of Info,must be two numbers from 1 to {0}.
        /// </summary>
        internal static string WrongFormatOfTurnInfo {
            get {
                return ResourceManager.GetString("WrongFormatOfTurnInfo", resourceCulture);
            }
        }
    }
}
